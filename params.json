{"name":"Wriggle","body":"## Usage\r\n\r\n``` ruby\r\nrequire 'wriggle'\r\n\r\nwriggle '/path/to/files' do |w|\r\n  # Print a list of files\r\n  w.file { |path| puts path }\r\n\r\n  # Build a list of Rails controller files\r\n  controllers = []\r\n  w.files /_controller\\.rb/ do |path|\r\n    controllers << path\r\n  end\r\n\r\n  # Print the path of any file named \"spec_helper.rb\"\r\n  w.file('spec_helper.rb') { |path| puts path }\r\n\r\n  # Build an array of Ruby code files\r\n  ruby_files = []\r\n  w.extension :rb do |path|\r\n    ruby_files << path\r\n  end\r\n\r\n  # Build an array of video files\r\n  video_files = []\r\n  w.extensions %w(mpg mpeg wmv avi mkv) do |path|\r\n    video_files << path\r\n  end\r\n\r\n  # Delete directories that are empty\r\n  w.directories do |path|\r\n    Dir.rmdir(path) unless Dir.entries(path).length > 2\r\n  end\r\n\r\n  # Print a list of directories matching \"foo\"\r\n  # NOTE: Matches \"/baz/bar/foo\" and \"/foo\" but not \"/foo/bar/baz\"\r\n  w.directory(/foo/) { |path| puts path }\r\nend\r\n```\r\n\r\n## Caveats\r\n\r\nWriggle is a wrapper around Ruby's standard library,\r\n[Find](http://ruby-doc.org/stdlib/libdoc/find/rdoc/index.html). As such, it\r\ncrawls its starting path recursively. This is currently its default -- and only\r\n-- behavior.\r\n\r\nDefined blocks are yielded to as `Find` encounters a directory or file, *not\r\nnecessarily the order in which the blocks were defined*.\r\n\r\nAs an example, here is Wriggle crawling its own tree:\r\n\r\n    ruby-1.9.2-p180 :001 > require 'wriggle'\r\n     => true\r\n    ruby-1.9.2-p180 :002 > wriggle '.' do |w|\r\n    ruby-1.9.2-p180 :003 >   w.file { |path| puts path }\r\n    ruby-1.9.2-p180 :004?>   w.directory { |path| puts path }\r\n    ruby-1.9.2-p180 :005?> end\r\n    .\r\n    ./.document\r\n    ./.gitignore\r\n    ./.travis.yml\r\n    ./Gemfile\r\n    ./Gemfile.lock\r\n    ./LICENSE\r\n    ./README.md\r\n    ./Rakefile\r\n    ./lib\r\n    ./lib/wriggle\r\n    ./lib/wriggle/version.rb\r\n    ./lib/wriggle.rb\r\n    ./spec\r\n    ./spec/spec_helper.rb\r\n    ./spec/support\r\n    ./spec/support/temporary_files.rb\r\n    ./spec/wriggle_spec.rb\r\n    ./wriggle.gemspec\r\n\r\nIf it were important to output a list of directories *and then* a list of\r\nfiles, it might be best to collect each in their own arrays and then, outside\r\nof the `wriggle` block, loop through them to print each entry.\r\n\r\n## Install\r\n\r\n    gem install wriggle\r\n\r\n## Documentation\r\n\r\n[API Docs](http://rdoc.info/github/tsigo/wriggle/master/Wriggle)\r\n\r\n## Contributing\r\n\r\nPull requests and bug reports are very appreciated.\r\n\r\n* [Bug reports](https://github.com/tsigo/wriggle/issues)\r\n* Patches: Fork and send a pull request.\r\n  * Include specs where it makes sense.\r\n\r\n### Developer Quickstart\r\n\r\nOnce you've cloned this repository or your own fork, these steps should\r\nadequately prepare you to begin contributing to the project.\r\n\r\n#### Create a new RVM gemset (optional)\r\n\r\n    rvm gemset create wriggle\r\n    rvm gemset use wriggle\r\n\r\n#### Bundler\r\n\r\nFirst, [install Bundler](https://github.com/carlhuda/bundler) if you haven't\r\nalready. Then install the development dependencies.\r\n\r\n    bundle install\r\n\r\n#### Run Specs\r\n\r\n    rake spec\r\n\r\nIf everything passes, you're good to go!\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2011 Robert Speicher. See LICENSE for details.","tagline":"A simple Ruby directory crawler DSL","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}